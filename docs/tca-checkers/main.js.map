{"version":3,"sources":["./src/app/game-screen/game-screen.component.ts","./src/app/game-screen/game-screen.component.html","./src/environments/environment.ts","./src/app/play-again/play-again.component.ts","./src/app/play-again/play-again.component.html","./src/app/welcome-screen/welcome-screen.component.html","./src/app/welcome-screen/welcome-screen.component.ts","./src/app/shared-data.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/stats-screen/stats-screen.component.ts","./src/app/stats-screen/stats-screen.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { SharedDataService, Games } from '../shared-data.service';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { PlayAgainComponent } from '../play-again/play-again.component';\n\n@Component({\n  selector: 'app-game-screen',\n  templateUrl: './game-screen.component.html',\n  styleUrls: ['./game-screen.component.css']\n})\nexport class GameScreenComponent implements OnInit {\n\n  checkerGame: Games[] = [];\n\n  constructor(private sharedDataSvc: SharedDataService, private bottomSheet: MatBottomSheet) {}\n\n  ngOnInit(): void {\n    this.checkerGame = this.sharedDataSvc.getGamesData();\n  }\n\n  playerTwo = this.sharedDataSvc.getPlayerTwo();\n\n  addNewWinningGame() {\n    this.bottomSheet.open(PlayAgainComponent);\n    \n    const newGame = {\n      opponentName: this.playerTwo,\n      result: \"W\"\n    };\n    this.sharedDataSvc.addGameData(newGame);\n    // console.log(this.sharedDataSvc.getGamesData());\n  }\n\n  addNewLosingGame() {\n    this.bottomSheet.open(PlayAgainComponent);\n\n    const newGame = {\n      opponentName: this.playerTwo,\n      result: \"L\"\n    };\n    this.sharedDataSvc.addGameData(newGame);\n    // console.log(this.sharedDataSvc.getGamesData());\n  }\n\n  addNewDrawGame() {\n    this.bottomSheet.open(PlayAgainComponent);\n    \n    const newGame = {\n      opponentName: this.playerTwo,\n      result: \"D\"\n    };\n    this.sharedDataSvc.addGameData(newGame);\n    // console.log(this.sharedDataSvc.getGamesData());\n  }\n\n  addNewQuitGame() {\n    const newGame = {\n      opponentName: this.playerTwo,\n      result: \"Q\"\n    };\n    this.sharedDataSvc.addGameData(newGame);\n    // console.log(this.sharedDataSvc.getGamesData());\n  }\n}","<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n  <meta charset=\"UTF-8\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\">\n  <link href=\"https://fonts.googleapis.com/css2?family=Exo:wght@300&display=swap\" rel=\"stylesheet\">\n</head>\n\n<body>\n  <div \n    id=\"gameButtons\"\n  >\n    <button \n        mat-raised-button \n        color=\"primary\" \n        class=\"button\"\n        (click)=\"addNewWinningGame()\"\n        mat-stroked-button \n    >\n      WON\n    </button>\n\n    <button \n        mat-raised-button \n        color=\"accent\" \n        class=\"button\"\n        (click)=\"addNewLosingGame()\"\n    >\n      LOST\n    </button>\n\n    <button \n        mat-button \n        class=\"button draw\"\n        (click)=\"addNewDrawGame()\"\n    >\n      DRAW\n    </button>\n\n    <button \n        mat-raised-button \n        color=\"warn\" \n        class=\"button\"\n        (click)=\"addNewQuitGame()\"\n        routerLink=\"/welcome\"\n    >\n      QUIT\n    </button>\n  </div>\n</body>\n\n</html>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-play-again',\n  templateUrl: './play-again.component.html',\n  styleUrls: ['./play-again.component.css']\n})\nexport class PlayAgainComponent implements OnInit {\n\n  constructor(private bottomSheetRef: MatBottomSheetRef<PlayAgainComponent>, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  playAgain() {\n    this.bottomSheetRef.dismiss();\n  }\n\n  quit() {\n    this.bottomSheetRef.dismiss();\n    this.router.navigateByUrl(\"/welcome\");\n  }\n\n}\n","<div\n    class=\"container\"\n>\n    <button\n        mat-raised-button \n        color=\"primary\"\n        (click)=\"playAgain()\"\n    >\n        Play Again\n    </button>\n\n    <button\n        mat-raised-button \n        color=\"warn\" \n        (click)=\"quit()\"\n        class=\"quit\"\n    >\n        Quit Game\n    </button>\n</div>","<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n  <meta charset=\"UTF-8\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\">\n  <link href=\"https://fonts.googleapis.com/css2?family=Exo:wght@300&display=swap\" rel=\"stylesheet\">\n</head>\n\n<body class=\"font\">\n  \n    <h1 class=\"mat-h1\">\n      SELECT PLAYER 2\n    </h1>\n    <div class=\"form-check chooseOpponent\">\n\n      <!-- Template Variable #checker Opponents -->\n      <mat-selection-list #checkerOpponents [multiple]=\"false\">\n        <mat-list-option *ngFor=\"let opponent of opponents\" [value]=\"opponent.name\"\n          (click)=\"selectPlayerTwo(opponent.name)\">\n          {{opponent.name}}\n          <mat-divider></mat-divider>\n        </mat-list-option>\n      </mat-selection-list>\n    </div>\n\n    <br><br>\n\n    <button \n      mat-raised-button color=\"warn\" \n      class=\"goToStats\" \n      routerLink=\"/stats\"\n    >\n      Game Stats\n    </button>\n\n    <br><br>\n\n    <div class=\"opponentInput\">\n      <span class=\"inputButton\">\n        <mat-form-field>\n          <mat-label>\n            Enter new Opponent\n          </mat-label>\n          <input matInput placeholder=\"Ex. Charles Schultz\" [(ngModel)]=\"nameInTextInput\">\n        </mat-form-field>\n\n        <br><br>\n\n        <button mat-raised-button color=\"primary\" (click)=\"addNewOpponent(); clearInputText()\"\n          class=\"newOpponentButton\">\n          Add Opponent\n        </button>\n      </span>\n    </div>\n  \n</body>\n\n</html>","import { Component, OnInit } from '@angular/core';\nimport { SharedDataService, Opponents } from '../shared-data.service';\n\n@Component({\n  selector: 'app-welcome-screen',\n  templateUrl: './welcome-screen.component.html',\n  styleUrls: ['./welcome-screen.component.css']\n})\n\nexport class WelcomeScreenComponent implements OnInit {\n\n  nameInTextInput = \"\";\n\n  opponents: Opponents[] = [];\n\n  constructor(private sharedDataSvc: SharedDataService) {}\n\n  ngOnInit() {\n    this.opponents = this.sharedDataSvc.getOpponents();\n  }\n\n  addNewOpponent() {\n    const newOpponent = {\n      name: this.nameInTextInput\n    };\n    this.sharedDataSvc.addOpponent(newOpponent);\n\n    // console.log(this.sharedDataSvc.getOpponents());\n    // this.opponents = [\n    //   ...this.opponents,\n    //   newOpponent\n    //];\n  }\n\n  clearInputText() {\n    this.nameInTextInput = ' ';\n  }\n\n  //set the value for chosen opponent\n  selectPlayerTwo(playerTwo: string) {\n    this.sharedDataSvc.setPlayerTwo(playerTwo);\n    console.log(playerTwo);\n  }\n}","import { Injectable } from '@angular/core';\n\nexport interface Opponents {\n  name: string;\n}\n\nexport interface Games {\n  opponentName: string;\n  result: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SharedDataService {\n\n  //variable to display who player chose to play, \n      //used on stats screen, set on welcome screen\n  playerTwo: string;\n\n  //array to hold oppoents\n  opponents: Opponents[] = \n  [\n    {\n      name: 'Sherman'\n    },\n    {\n      name: 'Tina'\n    }\n  ];\n\n  //array to hold game data\n  checkerGames: Games[] =\n    [\n      {\n        opponentName: \"Sherman\"\n        , result: \"L\"\n      }\n      , {\n        opponentName: \"Sherman\"\n        , result: \"D\"\n      }\n      , {\n        opponentName: \"Sherman\"\n        , result: \"W\"\n      }\n      , {\n        opponentName: \"Sherman\"\n        , result: \"L\"\n      }\n      , {\n        opponentName: \"Sherman\"\n        , result: \"L\"\n      }\n      , {\n        opponentName: \"Sherman\"\n        , result: \"Q\"\n      }\n      , {\n        opponentName: \"Sherman\"\n        , result: \"W\"\n      }\n      , {\n        opponentName: \"Tina\"\n        , result: \"L\"\n      }\n      , {\n        opponentName: \"Tina\"\n        , result: \"Q\"\n      }\n      , {\n        opponentName: \"Tina\"\n        , result: \"Q\"\n      }\n\n    ];\n\n  constructor() { }\n\n  //Welcome Screen Mock Data\n  getOpponents() {\n    return this.opponents;\n  }\n\n  //Stats screen Mock Data\n  getGamesData() {\n    return this.checkerGames;\n  }\n\n  //Called on Games Screen when user \"W\", \"L\", or \"D\"...Displays results on stats-screen\n  addGameData(newResult: Games) {\n    console.log(newResult);\n    this.checkerGames = [\n      ...this.checkerGames,\n      newResult\n    ]\n  }\n\n  //called on Welcome Screen when you add another opponent\n  addOpponent(newOpponent: Opponents) {\n    console.log(newOpponent);\n    this.opponents = [\n      ...this.opponents,\n      newOpponent\n    ]\n  }\n\n  //Stats Screen Logic\n  setPlayerTwo(opponentChosen: string) {\n    this.playerTwo = opponentChosen;\n  }\n\n  getPlayerTwo() {\n    return this.playerTwo;\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'tca-checkers';\n}\n","<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { WelcomeScreenComponent } from './welcome-screen/welcome-screen.component';\nimport { StatsScreenComponent } from './stats-screen/stats-screen.component';\nimport { GameScreenComponent } from './game-screen/game-screen.component';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatListModule } from '@angular/material/list';\nimport { MatCardModule } from '@angular/material/card';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport { PlayAgainComponent } from './play-again/play-again.component';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WelcomeScreenComponent,\n    StatsScreenComponent,\n    GameScreenComponent,\n    PlayAgainComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatInputModule,\n    MatCheckboxModule,\n    MatListModule,\n    MatCardModule,\n    MatDividerModule,\n    MatSnackBarModule,\n    MatBottomSheetModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { SharedDataService, Games } from '../shared-data.service';\n\n@Component({\n  selector: 'app-stats-screen',\n  templateUrl: './stats-screen.component.html',\n  styleUrls: ['./stats-screen.component.css']\n})\nexport class StatsScreenComponent implements OnInit {\n\n  checkerGames: Games[] = [];\n  groupByOpponnentName: any;\n  shapeForByPlayerStats: any;\n\n  //Variables for Game Results\n  numberOfWins: number;\n  numberOfLosses: number;\n  numberOfDraws: number;\n  numberOfGames: number;\n  numberOfQuits: number;\n\n  //Variable For Opponent\n  playerTwo = this.sharedDataSvc.getPlayerTwo();\n\n  constructor(private sharedDataSvc: SharedDataService) {}\n\n  //Get the games array here to display on view\n  ngOnInit(): void {\n    this.checkerGames = this.sharedDataSvc.getGamesData();\n    this.shapeData();\n  }\n\n  shapeData() {\n    // Group by...\n    const groupByOpponnentName = this.checkerGames.reduce(\n      (acc, x) => acc.set(x.opponentName, [...acc.get(x.opponentName) || [], x])\n        , new Map()\n    );\n\n    console.log([...groupByOpponnentName]);\n\n    const shapeForByPlayerStats = [...groupByOpponnentName].map(x => ({\n      opponentName: x[0]\n      , numberOfGames: x[1].length\n      , wins: x[1].filter(y => y.result == \"W\").length\n      , losses: x[1].filter(y => y.result == \"L\").length\n      , draws: x[1].filter(y => y.result == \"D\").length\n      , quits: x[1].filter(y => y.result == \"Q\").length\n    }));\n\n    console.log(shapeForByPlayerStats);\n\n    \n    //Use a filter on shapeForByPlayerStats to find opponent name \n        //and get necessary opponent information??????\n    const resultsForGames = shapeForByPlayerStats.filter(x => x.opponentName == this.playerTwo);\n\n    //Logic for when a user views stats vs a new player not yet in the DB, don't want it\n        //To be blank\n\n    //Get number of wins, losses, and draws from games vs opponent\n    resultsForGames.filter(x => this.numberOfWins = x.wins);\n    resultsForGames.filter(x => this.numberOfLosses = x.losses);\n    resultsForGames.filter(x => this.numberOfDraws = x.draws);\n    resultsForGames.filter(x => this.numberOfQuits = x.quits);\n    resultsForGames.filter(x => this.numberOfGames = x.numberOfGames);\n  }\n}\n","<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n  <meta charset=\"UTF-8\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\">\n  <link href=\"https://fonts.googleapis.com/css2?family=Exo:wght@300&display=swap\" rel=\"stylesheet\">\n</head>\n\n<body>\n  <div>\n    <h1>Stats VS {{ playerTwo }}</h1>\n\n    <mat-list role=\"list\">\n      <mat-list-item role=\"listitem\">Number of Wins VS {{ playerTwo }}: {{ numberOfWins }}</mat-list-item>\n      <mat-divider></mat-divider>\n\n      <mat-list-item role=\"listitem\">Number of Losses VS {{ playerTwo }}: {{ numberOfLosses }}</mat-list-item>\n      <mat-divider></mat-divider>\n\n      <mat-list-item role=\"listitem\">Number of Draws VS {{ playerTwo }}: {{ numberOfDraws }}</mat-list-item>\n      <mat-divider></mat-divider>\n\n      <mat-list-item role=\"listitem\">Number of Quits VS {{ playerTwo }}: {{ numberOfQuits }}</mat-list-item>\n      <mat-divider></mat-divider>\n\n      <mat-list-item role=\"listitem\">Total Games Played VS {{ playerTwo }}: {{ numberOfGames }}</mat-list-item>\n\n    </mat-list>\n\n    <br><br>\n\n    <button \n      mat-raised-button color=\"primary\"\n      routerLink=\"/game\"\n    >\n      Play Game\n    </button>\n  </div>\n</body>\n\n</html>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\n//Import the components\nimport { WelcomeScreenComponent } from './welcome-screen/welcome-screen.component';\nimport {StatsScreenComponent } from './stats-screen/stats-screen.component';\nimport { GameScreenComponent } from './game-screen/game-screen.component';\n\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/welcome', pathMatch: 'full' },\n  { path: 'welcome', component: WelcomeScreenComponent },\n  { path: 'stats', component: StatsScreenComponent },\n  { path: 'game', component: GameScreenComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}